package com.sportsinfo.auth; import com.sportsinfo.common.ApiResponse; import com.sportsinfo.security.JwtService; import com.sportsinfo.user.*; import jakarta.validation.constraints.*; import org.springframework.http.ResponseEntity; import org.springframework.security.authentication.*; import org.springframework.security.core.AuthenticationException; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.*; import java.util.Map; @RestController @RequestMapping("/api/auth") @Validated public class AuthController { private final UserService users; private final JwtService jwt; private final AuthenticationManager am; public AuthController(UserService users, JwtService jwt, AuthenticationManager am){ this.users=users; this.jwt=jwt; this.am=am; } public record RegisterRequest(@NotBlank String name, @Email String email, String phone, @NotBlank String password){} public record LoginRequest(@Email String email, @NotBlank String password){} @PostMapping("/register") public ResponseEntity<ApiResponse<Map<String,Object>>> register(@RequestBody RegisterRequest r){ User u = users.register(r.name(), r.email(), r.phone(), r.password()); String t = jwt.generateToken(u.getEmail(), Map.of("role", u.getRole().name())); return ResponseEntity.ok(ApiResponse.ok(Map.of("token", t, "userId", u.getId())));} @PostMapping("/login") public ResponseEntity<ApiResponse<Map<String,Object>>> login(@RequestBody LoginRequest r){ try{ am.authenticate(new UsernamePasswordAuthenticationToken(r.email(), r.password())); User u = users.getByEmail(r.email()); String t = jwt.generateToken(u.getEmail(), Map.of("role", u.getRole().name())); return ResponseEntity.ok(ApiResponse.ok(Map.of("token", t, "userId", u.getId())));} catch(AuthenticationException ex){ return ResponseEntity.status(401).body(ApiResponse.error("Credenciais inv√°lidas")); } } }
